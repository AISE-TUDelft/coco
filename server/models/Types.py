from enum import Enum


class TriggerType(str, Enum):
    """
    The TriggerType class is an Enum class that defines the trigger types for a given request.
    It indicates the type of trigger that initiated the request.
    "auto" - The trigger was automatically generated.
    "man" - The trigger was manually generated (e.g., by a user using ctrl+space).
    "idle" - The trigger was generated by the IDE when the user is idle (e.g., after a certain time of inactivity).
    """
    auto = "auto"
    man = "man"
    idle = "idle"


class IDEType(str, Enum):
    """
    The IDEType class is an Enum class that defines the IDE types for a given request.
    It indicates the IDE in which the code snippet is being written.
    """
    # TODO: decide whether it should be JetBrains collectively or each IDE separately
    # -Aral (4 Jul): I think let's collect what we can collect, so each IDE separately
    # -Roham (05 Jul): I agree with Aral. We should collect each IDE separately as users using
    #       different IDEs might have different preferences and requirements.
    vscode = "VSCode"
    intellij = "IntelliJ"
    pycharm = "PyCharm"
    phpstorm = "PhpStorm"
    goland = "GoLand"
    rider = "Rider"
    clion = "CLion"
    rustrover = "RustRover"
    webstorm = "WebStorm"
    rubymine = "RubyMine"
    datagrip = "DataGrip"
    resharper = "ReSharper"
    fleet = "Fleet"
    aqua = "Aqua"
    other = "Other"


class LanguageType(str, Enum):
    """
    The LanguageType class is an Enum class that defines the language types for a given request.
    It indicates the programming language of the code snippet for which the completion is requested.
    """
    # -Aral (4 Jul): We will need to refactor this code (all models sent on
    # the network) to also be included on the client-side plugin somehow
    plaintext = "plaintext"
    code_text_binary = "code-text-binary"
    log_upper = "Log"
    log_lower = "log"
    scminput = "scminput"
    bat = "bat"
    clojure = "clojure"
    coffeescript = "coffeescript"
    jsonc = "jsonc"
    json = "json"
    c = "c"
    cpp = "cpp"
    cuda_cpp = "cuda-cpp"
    csharp = "csharp"
    css = "css"
    dart = "dart"
    diff = "diff"
    dockerfile = "dockerfile"
    ignore = "ignore"
    fsharp = "fsharp"
    git_commit = "git-commit"
    git_rebase = "git-rebase"
    go = "go"
    groovy = "groovy"
    handlebars = "handlebars"
    hlsl = "hlsl"
    html = "html"
    ini = "ini"
    properties = "properties"
    java = "java"
    javascriptreact = "javascriptreact"
    javascript = "javascript"
    jsx_tags = "jsx-tags"
    jsonl = "jsonl"
    snippets = "snippets"
    julia = "julia"
    juliamarkdown = "juliamarkdown"
    tex = "tex"
    latex = "latex"
    bibtex = "bibtex"
    cpp_embedded_latex = "cpp_embedded_latex"
    markdown_latex_combined = "markdown_latex_combined"
    less = "less"
    lua = "lua"
    makefile = "makefile"
    markdown = "markdown"
    markdown_math = "markdown-math"
    wat = "wat"
    objective_c = "objective-c"
    objective_cpp = "objective-cpp"
    perl = "perl"
    raku = "raku"
    php = "php"
    powershell = "powershell"
    jade = "jade"
    python = "python"
    r = "r"
    razor = "razor"
    restructuredtext = "restructuredtext"
    ruby = "ruby"
    rust = "rust"
    scss = "scss"
    search_result = "search-result"
    shaderlab = "shaderlab"
    shellscript = "shellscript"
    sql = "sql"
    swift = "swift"
    typescript = "typescript"
    typescriptreact = "typescriptreact"
    vb = "vb"
    xml = "xml"
    xsl = "xsl"
    dockercompose = "dockercompose"
    yaml = "yaml"
    doctex = "doctex"
    bibtex_style = "bibtex-style"
    latex_expl3 = "latex-expl3"
    pweave = "pweave"
    jlweave = "jlweave"
    rsweave = "rsweave"
    csv = "csv"
    tsv = "tsv"
    jinja = "jinja"
    pip_requirements = "pip-requirements"
    toml = "toml"
    raw = "raw"
    ssh_config = "ssh_config"
    vimscript = "Vimscript"
